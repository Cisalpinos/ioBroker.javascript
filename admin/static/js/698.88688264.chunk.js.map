{"version":3,"file":"static/js/698.88688264.chunk.js","mappings":"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","sources":["../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../node_modules/@mui/private-theming/useTheme/useTheme.js","../node_modules/@mui/system/esm/RtlProvider/index.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/colorManipulator.js","../node_modules/@mui/system/esm/createStyled.js","../node_modules/@mui/system/esm/cssVars/getInitColorSchemeScript.js","../node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js","../node_modules/@mui/system/esm/cssVars/createCssVarsProvider.js","../node_modules/@mui/system/esm/cssVars/createGetCssVar.js","../node_modules/@mui/system/esm/cssVars/cssVarsParser.js","../node_modules/@mui/system/esm/cssVars/prepareCssVars.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RtlContext = /*#__PURE__*/React.createContext();\nfunction RtlProvider(_ref) {\n  let {\n      value\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/_jsx(RtlContext.Provider, _extends({\n    value: value != null ? value : true\n  }, props));\n}\nprocess.env.NODE_ENV !== \"production\" ? RtlProvider.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.bool\n} : void 0;\nexport const useRtl = () => {\n  const value = React.useContext(RtlContext);\n  return value != null ? value : false;\n};\nexport default RtlProvider;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport exactProp from '@mui/utils/exactProp';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport RtlProvider from '../RtlProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  const rtlValue = engineTheme.direction === 'rtl';\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: /*#__PURE__*/_jsx(RtlProvider, {\n        value: rtlValue,\n        children: children\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n/* eslint-disable @typescript-eslint/naming-convention */\nimport clamp from '@mui/utils/clamp';\n/**\n * Returns a number whose value is limited to the given range.\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clampWrapper(value, min = 0, max = 1) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (value < min || value > max) {\n      console.error(`MUI: The value provided ${value} is out of range [${min}, ${max}].`);\n    }\n  }\n  return clamp(value, min, max);\n}\n\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\nexport function hexToRgb(color) {\n  color = color.slice(1);\n  const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, 'g');\n  let colors = color.match(re);\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(n => n + n);\n  }\n  return colors ? `rgb${colors.length === 4 ? 'a' : ''}(${colors.map((n, index) => {\n    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;\n  }).join(', ')})` : '';\n}\nfunction intToHex(int) {\n  const hex = int.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\nexport function decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n  if (color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n  const marker = color.indexOf('(');\n  const type = color.substring(0, marker);\n  if (['rgb', 'rgba', 'hsl', 'hsla', 'color'].indexOf(type) === -1) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Unsupported \\`${color}\\` color.\nThe following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : _formatMuiErrorMessage(9, color));\n  }\n  let values = color.substring(marker + 1, color.length - 1);\n  let colorSpace;\n  if (type === 'color') {\n    values = values.split(' ');\n    colorSpace = values.shift();\n    if (values.length === 4 && values[3].charAt(0) === '/') {\n      values[3] = values[3].slice(1);\n    }\n    if (['srgb', 'display-p3', 'a98-rgb', 'prophoto-rgb', 'rec-2020'].indexOf(colorSpace) === -1) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: unsupported \\`${colorSpace}\\` color space.\nThe following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : _formatMuiErrorMessage(10, colorSpace));\n    }\n  } else {\n    values = values.split(',');\n  }\n  values = values.map(value => parseFloat(value));\n  return {\n    type,\n    values,\n    colorSpace\n  };\n}\n\n/**\n * Returns a channel created from the input color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {string} - The channel for the color, that can be used in rgba or hsla colors\n */\nexport const colorChannel = color => {\n  const decomposedColor = decomposeColor(color);\n  return decomposedColor.values.slice(0, 3).map((val, idx) => decomposedColor.type.indexOf('hsl') !== -1 && idx !== 0 ? `${val}%` : val).join(' ');\n};\nexport const private_safeColorChannel = (color, warning) => {\n  try {\n    return colorChannel(color);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n};\n\n/**\n * Converts a color object with type and values to a string.\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla', 'color'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\nexport function recomposeColor(color) {\n  const {\n    type,\n    colorSpace\n  } = color;\n  let {\n    values\n  } = color;\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map((n, i) => i < 3 ? parseInt(n, 10) : n);\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = `${values[1]}%`;\n    values[2] = `${values[2]}%`;\n  }\n  if (type.indexOf('color') !== -1) {\n    values = `${colorSpace} ${values.join(' ')}`;\n  } else {\n    values = `${values.join(', ')}`;\n  }\n  return `${type}(${values})`;\n}\n\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\nexport function rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n  const {\n    values\n  } = decomposeColor(color);\n  return `#${values.map((n, i) => intToHex(i === 3 ? Math.round(255 * n) : n)).join('')}`;\n}\n\n/**\n * Converts a color from hsl format to rgb format.\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\nexport function hslToRgb(color) {\n  color = decomposeColor(color);\n  const {\n    values\n  } = color;\n  const h = values[0];\n  const s = values[1] / 100;\n  const l = values[2] / 100;\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  let type = 'rgb';\n  const rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n  if (color.type === 'hsla') {\n    type += 'a';\n    rgb.push(values[3]);\n  }\n  return recomposeColor({\n    type,\n    values: rgb\n  });\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\nexport function getLuminance(color) {\n  color = decomposeColor(color);\n  let rgb = color.type === 'hsl' || color.type === 'hsla' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(val => {\n    if (color.type !== 'color') {\n      val /= 255; // normalized\n    }\n    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;\n  });\n\n  // Truncate at 3 digits\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\nexport function getContrastRatio(foreground, background) {\n  const lumA = getLuminance(foreground);\n  const lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\n/**\n * Sets the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} value - value to set the alpha channel to in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function alpha(color, value) {\n  color = decomposeColor(color);\n  value = clampWrapper(value);\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n  if (color.type === 'color') {\n    color.values[3] = `/${value}`;\n  } else {\n    color.values[3] = value;\n  }\n  return recomposeColor(color);\n}\nexport function private_safeAlpha(color, value, warning) {\n  try {\n    return alpha(color, value);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Darkens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clampWrapper(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1 || color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nexport function private_safeDarken(color, coefficient, warning) {\n  try {\n    return darken(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Lightens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clampWrapper(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  } else if (color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (1 - color.values[i]) * coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nexport function private_safeLighten(color, coefficient, warning) {\n  try {\n    return lighten(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function emphasize(color, coefficient = 0.15) {\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\nexport function private_safeEmphasize(color, coefficient, warning) {\n  try {\n    return emphasize(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n * @param {string} background - CSS color\n * @param {string} overlay - CSS color\n * @param {number} opacity - Opacity multiplier in the range 0 - 1\n * @param {number} [gamma=1.0] - Gamma correction factor. For gamma-correct blending, 2.2 is usual.\n */\nexport function blend(background, overlay, opacity, gamma = 1.0) {\n  const blendChannel = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [blendChannel(backgroundColor.values[0], overlayColor.values[0]), blendChannel(backgroundColor.values[1], overlayColor.values[1]), blendChannel(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"ownerState\"],\n  _excluded2 = [\"variants\"],\n  _excluded3 = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\n/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from './createTheme';\nimport styleFunctionSx from './styleFunctionSx';\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\nfunction resolveTheme({\n  defaultTheme,\n  theme,\n  themeId\n}) {\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (props, styles) => styles[slot];\n}\nfunction processStyleArg(callableStyle, _ref) {\n  let {\n      ownerState\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const resolvedStylesArg = typeof callableStyle === 'function' ? callableStyle(_extends({\n    ownerState\n  }, props)) : callableStyle;\n  if (Array.isArray(resolvedStylesArg)) {\n    return resolvedStylesArg.flatMap(resolvedStyle => processStyleArg(resolvedStyle, _extends({\n      ownerState\n    }, props)));\n  }\n  if (!!resolvedStylesArg && typeof resolvedStylesArg === 'object' && Array.isArray(resolvedStylesArg.variants)) {\n    const {\n        variants = []\n      } = resolvedStylesArg,\n      otherStyles = _objectWithoutPropertiesLoose(resolvedStylesArg, _excluded2);\n    let result = otherStyles;\n    variants.forEach(variant => {\n      let isMatch = true;\n      if (typeof variant.props === 'function') {\n        isMatch = variant.props(_extends({\n          ownerState\n        }, props, ownerState));\n      } else {\n        Object.keys(variant.props).forEach(key => {\n          if ((ownerState == null ? void 0 : ownerState[key]) !== variant.props[key] && props[key] !== variant.props[key]) {\n            isMatch = false;\n          }\n        });\n      }\n      if (isMatch) {\n        if (!Array.isArray(result)) {\n          result = [result];\n        }\n        result.push(typeof variant.style === 'function' ? variant.style(_extends({\n          ownerState\n        }, props, ownerState)) : variant.style);\n      }\n    });\n    return result;\n  }\n  return resolvedStylesArg;\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return styleFunctionSx(_extends({}, props, {\n      theme: resolveTheme(_extends({}, props, {\n        defaultTheme,\n        themeId\n      }))\n    }));\n  };\n  systemSx.__mui_systemSx = true;\n  return (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n    const {\n        name: componentName,\n        slot: componentSlot,\n        skipVariantsResolver: inputSkipVariantsResolver,\n        skipSx: inputSkipSx,\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n      } = inputOptions,\n      options = _objectWithoutPropertiesLoose(inputOptions, _excluded3);\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n    const transformStyleArg = stylesArg => {\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg || isPlainObject(stylesArg)) {\n        return props => processStyleArg(stylesArg, _extends({}, props, {\n          theme: resolveTheme({\n            theme: props.theme,\n            defaultTheme,\n            themeId\n          })\n        }));\n      }\n      return stylesArg;\n    };\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      let transformedStyleArg = transformStyleArg(styleArg);\n      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {\n            return null;\n          }\n          const styleOverrides = theme.components[componentName].styleOverrides;\n          const resolvedStyleOverrides = {};\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, _extends({}, props, {\n              theme\n            }));\n          });\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          var _theme$components;\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[componentName]) == null ? void 0 : _theme$components.variants;\n          return processStyleArg({\n            variants: themeVariants\n          }, _extends({}, props, {\n            theme\n          }));\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      }\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n}","import * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_MODE_STORAGE_KEY = 'mode';\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\nexport const DEFAULT_ATTRIBUTE = 'data-color-scheme';\nexport default function getInitColorSchemeScript(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme = 'light',\n    defaultDarkColorScheme = 'dark',\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    attribute = DEFAULT_ATTRIBUTE,\n    colorSchemeNode = 'document.documentElement'\n  } = options || {};\n  return /*#__PURE__*/_jsx(\"script\", {\n    // eslint-disable-next-line react/no-danger\n    dangerouslySetInnerHTML: {\n      __html: `(function() {\ntry {\n  var mode = localStorage.getItem('${modeStorageKey}') || '${defaultMode}';\n  var colorScheme = '';\n  if (mode === 'system') {\n    // handle system mode\n    var mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n    } else {\n      colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n    }\n  }\n  if (mode === 'light') {\n    colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n  }\n  if (mode === 'dark') {\n    colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n  }\n  if (colorScheme) {\n    ${colorSchemeNode}.setAttribute('${attribute}', colorScheme);\n  }\n} catch(e){}})();`\n    }\n  }, \"mui-color-scheme-init\");\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from './getInitColorSchemeScript';\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nexport function getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nfunction initializeValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n  let value;\n  try {\n    value = localStorage.getItem(key) || undefined;\n    if (!value) {\n      // the first time that user enters the site.\n      localStorage.setItem(key, defaultValue);\n    }\n  } catch (e) {\n    // Unsupported\n  }\n  return value || defaultValue;\n}\nexport default function useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const [state, setState] = React.useState(() => {\n    const initialMode = initializeValue(modeStorageKey, defaultMode);\n    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme,\n      darkColorScheme\n    };\n  });\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      if (mode === currentState.mode) {\n        // do nothing if mode does not change\n        return currentState;\n      }\n      const newMode = mode != null ? mode : defaultMode;\n      try {\n        localStorage.setItem(modeStorageKey, newMode);\n      } catch (e) {\n        // Unsupported\n      }\n      return _extends({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value) {\n      setState(currentState => {\n        try {\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n        } catch (e) {\n          // Unsupported\n        }\n        return _extends({}, currentState, {\n          lightColorScheme: defaultLightColorScheme,\n          darkColorScheme: defaultDarkColorScheme\n        });\n      });\n    } else if (typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = _extends({}, currentState);\n          processState(currentState, mode => {\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n            } catch (e) {\n              // Unsupported\n            }\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else {\n      setState(currentState => {\n        const newState = _extends({}, currentState);\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        if (newLightColorScheme) {\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\n            console.error(`\\`${newLightColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.lightColorScheme = newLightColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        if (newDarkColorScheme) {\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\n            console.error(`\\`${newDarkColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.darkColorScheme = newDarkColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        return newState;\n      });\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(event => {\n    if (state.mode === 'system') {\n      setState(currentState => {\n        const systemMode = event != null && event.matches ? 'dark' : 'light';\n\n        // Early exit, nothing changed.\n        if (currentState.systemMode === systemMode) {\n          return currentState;\n        }\n        return _extends({}, currentState, {\n          systemMode\n        });\n      });\n    }\n  }, [state.mode]);\n\n  // Ref hack to avoid adding handleMediaQuery as a dep\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    const handler = (...args) => mediaListener.current(...args);\n\n    // Always listen to System preference\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Intentionally use deprecated listener methods to support iOS & old browsers\n    media.addListener(handler);\n    handler(media);\n    return () => {\n      media.removeListener(handler);\n    };\n  }, []);\n\n  // Handle when localStorage has changed\n  React.useEffect(() => {\n    if (storageWindow) {\n      const handleStorage = event => {\n        const value = event.newValue;\n        if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n          // If the key is deleted, value will be null then reset color scheme to the default one.\n          if (event.key.endsWith('light')) {\n            setColorScheme({\n              light: value\n            });\n          }\n          if (event.key.endsWith('dark')) {\n            setColorScheme({\n              dark: value\n            });\n          }\n        }\n        if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n          setMode(value || defaultMode);\n        }\n      };\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => {\n        storageWindow.removeEventListener('storage', handleStorage);\n      };\n    }\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return _extends({}, state, {\n    colorScheme,\n    setMode,\n    setColorScheme\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nconst _excluded = [\"colorSchemes\", \"components\", \"generateCssVars\", \"cssVarPrefix\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport deepmerge from '@mui/utils/deepmerge';\nimport { GlobalStyles } from '@mui/styled-engine';\nimport { useTheme as muiUseTheme } from '@mui/private-theming';\nimport ThemeProvider from '../ThemeProvider';\nimport systemGetInitColorSchemeScript, { DEFAULT_ATTRIBUTE, DEFAULT_COLOR_SCHEME_STORAGE_KEY, DEFAULT_MODE_STORAGE_KEY } from './getInitColorSchemeScript';\nimport useCurrentColorScheme from './useCurrentColorScheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexport default function createCssVarsProvider(options) {\n  const {\n    themeId,\n    /**\n     * This `theme` object needs to follow a certain structure to\n     * be used correctly by the finel `CssVarsProvider`. It should have a\n     * `colorSchemes` key with the light and dark (and any other) palette.\n     * It should also ideally have a vars object created using `prepareCssVars`.\n     */\n    theme: defaultTheme = {},\n    attribute: defaultAttribute = DEFAULT_ATTRIBUTE,\n    modeStorageKey: defaultModeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    defaultMode: designSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    resolveTheme,\n    excludeVariablesFromRoot\n  } = options;\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n  if (process.env.NODE_ENV !== 'production') {\n    ColorSchemeContext.displayName = 'ColorSchemeContext';\n  }\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : _formatMuiErrorMessage(19));\n    }\n    return value;\n  };\n  function CssVarsProvider(props) {\n    const {\n      children,\n      theme: themeProp = defaultTheme,\n      modeStorageKey = defaultModeStorageKey,\n      colorSchemeStorageKey = defaultColorSchemeStorageKey,\n      attribute = defaultAttribute,\n      defaultMode = designSystemMode,\n      defaultColorScheme = designSystemColorScheme,\n      disableTransitionOnChange = designSystemTransitionOnChange,\n      storageWindow = typeof window === 'undefined' ? undefined : window,\n      documentNode = typeof document === 'undefined' ? undefined : document,\n      colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n      colorSchemeSelector = ':root',\n      disableNestedContext = false,\n      disableStyleSheetGeneration = false\n    } = props;\n    const hasMounted = React.useRef(false);\n    const upperTheme = muiUseTheme();\n    const ctx = React.useContext(ColorSchemeContext);\n    const nested = !!ctx && !disableNestedContext;\n    const scopedTheme = themeProp[themeId];\n    const _ref = scopedTheme || themeProp,\n      {\n        colorSchemes = {},\n        components = {},\n        generateCssVars = () => ({\n          vars: {},\n          css: {}\n        }),\n        cssVarPrefix\n      } = _ref,\n      restThemeProp = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n\n    // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\n    const {\n      mode: stateMode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme: stateColorScheme,\n      setColorScheme\n    } = useCurrentColorScheme({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageWindow\n    });\n    let mode = stateMode;\n    let colorScheme = stateColorScheme;\n    if (nested) {\n      mode = ctx.mode;\n      colorScheme = ctx.colorScheme;\n    }\n    const calculatedMode = (() => {\n      if (mode) {\n        return mode;\n      }\n      // This scope occurs on the server\n      if (defaultMode === 'system') {\n        return designSystemMode;\n      }\n      return defaultMode;\n    })();\n    const calculatedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (calculatedMode === 'dark') {\n          return defaultDarkColorScheme;\n        }\n        // use light color scheme, if default mode is 'light' | 'system'\n        return defaultLightColorScheme;\n      }\n      return colorScheme;\n    })();\n\n    // 2. Create CSS variables and store them in objects (to be generated in stylesheets in the final step)\n    const {\n      css: rootCss,\n      vars: rootVars\n    } = generateCssVars();\n\n    // 3. Start composing the theme object\n    const theme = _extends({}, restThemeProp, {\n      components,\n      colorSchemes,\n      cssVarPrefix,\n      vars: rootVars,\n      getColorSchemeSelector: targetColorScheme => `[${attribute}=\"${targetColorScheme}\"] &`\n    });\n\n    // 4. Create color CSS variables and store them in objects (to be generated in stylesheets in the final step)\n    //    The default color scheme stylesheet is constructed to have the least CSS specificity.\n    //    The other color schemes uses selector, default as data attribute, to increase the CSS specificity so that they can override the default color scheme stylesheet.\n    const defaultColorSchemeStyleSheet = {};\n    const otherColorSchemesStyleSheet = {};\n    Object.entries(colorSchemes).forEach(([key, scheme]) => {\n      const {\n        css,\n        vars\n      } = generateCssVars(key);\n      theme.vars = deepmerge(theme.vars, vars);\n      if (key === calculatedColorScheme) {\n        // 4.1 Merge the selected color scheme to the theme\n        Object.keys(scheme).forEach(schemeKey => {\n          if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {\n            // shallow merge the 1st level structure of the theme.\n            theme[schemeKey] = _extends({}, theme[schemeKey], scheme[schemeKey]);\n          } else {\n            theme[schemeKey] = scheme[schemeKey];\n          }\n        });\n        if (theme.palette) {\n          theme.palette.colorScheme = key;\n        }\n      }\n      const resolvedDefaultColorScheme = (() => {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n        return defaultColorScheme.light;\n      })();\n      if (key === resolvedDefaultColorScheme) {\n        if (excludeVariablesFromRoot) {\n          const excludedVariables = {};\n          excludeVariablesFromRoot(cssVarPrefix).forEach(cssVar => {\n            excludedVariables[cssVar] = css[cssVar];\n            delete css[cssVar];\n          });\n          defaultColorSchemeStyleSheet[`[${attribute}=\"${key}\"]`] = excludedVariables;\n        }\n        defaultColorSchemeStyleSheet[`${colorSchemeSelector}, [${attribute}=\"${key}\"]`] = css;\n      } else {\n        otherColorSchemesStyleSheet[`${colorSchemeSelector === ':root' ? '' : colorSchemeSelector}[${attribute}=\"${key}\"]`] = css;\n      }\n    });\n    theme.vars = deepmerge(theme.vars, rootVars);\n\n    // 5. Declaring effects\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\n    React.useEffect(() => {\n      if (colorScheme && colorSchemeNode) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        colorSchemeNode.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute, colorSchemeNode]);\n\n    // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n    React.useEffect(() => {\n      let timer;\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css);\n\n        // Force browser repaint\n        (() => window.getComputedStyle(documentNode.body))();\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    const contextValue = React.useMemo(() => ({\n      allColorSchemes,\n      colorScheme,\n      darkColorScheme,\n      lightColorScheme,\n      mode,\n      setColorScheme,\n      setMode,\n      systemMode\n    }), [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode]);\n    let shouldGenerateStyleSheet = true;\n    if (disableStyleSheetGeneration || nested && (upperTheme == null ? void 0 : upperTheme.cssVarPrefix) === cssVarPrefix) {\n      shouldGenerateStyleSheet = false;\n    }\n    const element = /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [shouldGenerateStyleSheet && /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [/*#__PURE__*/_jsx(GlobalStyles, {\n          styles: {\n            [colorSchemeSelector]: rootCss\n          }\n        }), /*#__PURE__*/_jsx(GlobalStyles, {\n          styles: defaultColorSchemeStyleSheet\n        }), /*#__PURE__*/_jsx(GlobalStyles, {\n          styles: otherColorSchemesStyleSheet\n        })]\n      }), /*#__PURE__*/_jsx(ThemeProvider, {\n        themeId: scopedTheme ? themeId : undefined,\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n    if (nested) {\n      return element;\n    }\n    return /*#__PURE__*/_jsx(ColorSchemeContext.Provider, {\n      value: contextValue,\n      children: element\n    });\n  }\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: PropTypes.string,\n    /**\n     * The component tree.\n     */\n    children: PropTypes.node,\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: PropTypes.any,\n    /**\n     * The CSS selector for attaching the generated custom properties\n     */\n    colorSchemeSelector: PropTypes.string,\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: PropTypes.string,\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\n     * The initial mode used.\n     */\n    defaultMode: PropTypes.string,\n    /**\n     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.\n     */\n    disableNestedContext: PropTypes.bool,\n    /**\n     * If `true`, the style sheet won't be generated.\n     *\n     * This is useful for controlling nested CssVarsProvider behavior.\n     */\n    disableStyleSheetGeneration: PropTypes.bool,\n    /**\n     * Disable CSS transitions when switching between modes or color schemes.\n     */\n    disableTransitionOnChange: PropTypes.bool,\n    /**\n     * The document to attach the attribute to.\n     */\n    documentNode: PropTypes.any,\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: PropTypes.string,\n    /**\n     * The window that attaches the 'storage' event listener.\n     * @default window\n     */\n    storageWindow: PropTypes.any,\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: PropTypes.object\n  } : void 0;\n  const defaultLightColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.light;\n  const defaultDarkColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.dark;\n  const getInitColorSchemeScript = params => systemGetInitColorSchemeScript(_extends({\n    attribute: defaultAttribute,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    defaultMode: designSystemMode,\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    modeStorageKey: defaultModeStorageKey\n  }, params));\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}","/**\n * The benefit of this function is to help developers get CSS var from theme without specifying the whole variable\n * and they does not need to remember the prefix (defined once).\n */\nexport default function createGetCssVar(prefix = '') {\n  function appendVar(...vars) {\n    if (!vars.length) {\n      return '';\n    }\n    const value = vars[0];\n    if (typeof value === 'string' && !value.match(/(#|\\(|\\)|(-?(\\d*\\.)?\\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\\d*\\.)?\\d+)$|(\\d+ \\d+ \\d+)/)) {\n      return `, var(--${prefix ? `${prefix}-` : ''}${value}${appendVar(...vars.slice(1))})`;\n    }\n    return `, ${value}`;\n  }\n\n  // AdditionalVars makes `getCssVar` less strict, so it can be use like this `getCssVar('non-mui-variable')` without type error.\n  const getCssVar = (field, ...fallbacks) => {\n    return `var(--${prefix ? `${prefix}-` : ''}${field}${appendVar(...fallbacks)})`;\n  };\n  return getCssVar;\n}","/**\n * This function create an object from keys, value and then assign to target\n *\n * @param {Object} obj : the target object to be assigned\n * @param {string[]} keys\n * @param {string | number} value\n *\n * @example\n * const source = {}\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\n *\n * @example\n * const source = { palette: { primary: 'var(--palette-primary)' } }\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\n */\nexport const assignNestedKeys = (obj, keys, value, arrayKeys = []) => {\n  let temp = obj;\n  keys.forEach((k, index) => {\n    if (index === keys.length - 1) {\n      if (Array.isArray(temp)) {\n        temp[Number(k)] = value;\n      } else if (temp && typeof temp === 'object') {\n        temp[k] = value;\n      }\n    } else if (temp && typeof temp === 'object') {\n      if (!temp[k]) {\n        temp[k] = arrayKeys.includes(k) ? [] : {};\n      }\n      temp = temp[k];\n    }\n  });\n};\n\n/**\n *\n * @param {Object} obj : source object\n * @param {Function} callback : a function that will be called when\n *                   - the deepest key in source object is reached\n *                   - the value of the deepest key is NOT `undefined` | `null`\n *\n * @example\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\n * // ['palette', 'primary', 'main'] '#000000'\n */\nexport const walkObjectDeep = (obj, callback, shouldSkipPaths) => {\n  function recurse(object, parentKeys = [], arrayKeys = []) {\n    Object.entries(object).forEach(([key, value]) => {\n      if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([...parentKeys, key])) {\n        if (value !== undefined && value !== null) {\n          if (typeof value === 'object' && Object.keys(value).length > 0) {\n            recurse(value, [...parentKeys, key], Array.isArray(value) ? [...arrayKeys, key] : arrayKeys);\n          } else {\n            callback([...parentKeys, key], value, arrayKeys);\n          }\n        }\n      }\n    });\n  }\n  recurse(obj);\n};\nconst getCssValue = (keys, value) => {\n  if (typeof value === 'number') {\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\n      // CSS property that are unitless\n      return value;\n    }\n    const lastKey = keys[keys.length - 1];\n    if (lastKey.toLowerCase().indexOf('opacity') >= 0) {\n      // opacity values are unitless\n      return value;\n    }\n    return `${value}px`;\n  }\n  return value;\n};\n\n/**\n * a function that parse theme and return { css, vars }\n *\n * @param {Object} theme\n * @param {{\n *  prefix?: string,\n *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean\n * }} options.\n *  `prefix`: The prefix of the generated CSS variables. This function does not change the value.\n *\n * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme).\n *\n * @example\n * const { css, vars } = parser({\n *   fontSize: 12,\n *   lineHeight: 1.2,\n *   palette: { primary: { 500: 'var(--color)' } }\n * }, { prefix: 'foo' })\n *\n * console.log(css) // { '--foo-fontSize': '12px', '--foo-lineHeight': 1.2, '--foo-palette-primary-500': 'var(--color)' }\n * console.log(vars) // { fontSize: 'var(--foo-fontSize)', lineHeight: 'var(--foo-lineHeight)', palette: { primary: { 500: 'var(--foo-palette-primary-500)' } } }\n */\nexport default function cssVarsParser(theme, options) {\n  const {\n    prefix,\n    shouldSkipGeneratingVar\n  } = options || {};\n  const css = {};\n  const vars = {};\n  const varsWithDefaults = {};\n  walkObjectDeep(theme, (keys, value, arrayKeys) => {\n    if (typeof value === 'string' || typeof value === 'number') {\n      if (!shouldSkipGeneratingVar || !shouldSkipGeneratingVar(keys, value)) {\n        // only create css & var if `shouldSkipGeneratingVar` return false\n        const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\n        Object.assign(css, {\n          [cssVar]: getCssValue(keys, value)\n        });\n        assignNestedKeys(vars, keys, `var(${cssVar})`, arrayKeys);\n        assignNestedKeys(varsWithDefaults, keys, `var(${cssVar}, ${value})`, arrayKeys);\n      }\n    }\n  }, keys => keys[0] === 'vars' // skip 'vars/*' paths\n  );\n  return {\n    css,\n    vars,\n    varsWithDefaults\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colorSchemes\", \"components\", \"defaultColorScheme\"];\nimport deepmerge from '@mui/utils/deepmerge';\nimport cssVarsParser from './cssVarsParser';\nfunction prepareCssVars(theme, parserConfig) {\n  // @ts-ignore - ignore components do not exist\n  const {\n      colorSchemes = {},\n      defaultColorScheme = 'light'\n    } = theme,\n    otherTheme = _objectWithoutPropertiesLoose(theme, _excluded);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = cssVarsParser(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n      [defaultColorScheme]: light\n    } = colorSchemes,\n    otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, [defaultColorScheme].map(_toPropertyKey));\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = cssVarsParser(scheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (light) {\n    // default color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = cssVarsParser(light, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[defaultColorScheme] = {\n      css,\n      vars\n    };\n  }\n  const generateCssVars = colorScheme => {\n    var _parserConfig$getSele2;\n    if (!colorScheme) {\n      var _parserConfig$getSele;\n      const css = _extends({}, rootCss);\n      return {\n        css,\n        vars: rootVars,\n        selector: (parserConfig == null || (_parserConfig$getSele = parserConfig.getSelector) == null ? void 0 : _parserConfig$getSele.call(parserConfig, colorScheme, css)) || ':root'\n      };\n    }\n    const css = _extends({}, colorSchemesMap[colorScheme].css);\n    return {\n      css,\n      vars: colorSchemesMap[colorScheme].vars,\n      selector: (parserConfig == null || (_parserConfig$getSele2 = parserConfig.getSelector) == null ? void 0 : _parserConfig$getSele2.call(parserConfig, colorScheme, css)) || ':root'\n    };\n  };\n  return {\n    vars: themeVars,\n    generateCssVars\n  };\n}\nexport default prepareCssVars;"],"names":["props","children","localTheme","theme","outerTheme","useTheme","React","output","_extends","mergeOuterLocalTheme","nested","_jsx","ThemeContext","value","hasSymbol","Symbol","for","_excluded","RtlContext","useRtl","_ref","_objectWithoutPropertiesLoose","Provider","EMPTY_THEME","useThemeScoping","themeId","upperTheme","isPrivate","arguments","length","undefined","resolvedTheme","mergedTheme","result","_defineProperty","useThemeWithoutDefault","upperPrivateTheme","usePrivateTheme","engineTheme","privateTheme","rtlValue","direction","MuiThemeProvider","StyledEngineThemeContext","RtlProvider","clampWrapper","min","max","clamp","hexToRgb","color","slice","re","RegExp","concat","colors","match","map","n","index","parseInt","Math","round","join","decomposeColor","type","charAt","marker","indexOf","substring","Error","_formatMuiErrorMessage","colorSpace","values","split","shift","parseFloat","private_safeColorChannel","warning","decomposedColor","val","idx","colorChannel","error","recomposeColor","i","rgbToHex","int","hex","toString","intToHex","hslToRgb","h","s","l","a","f","k","rgb","push","getLuminance","pow","Number","toFixed","getContrastRatio","foreground","background","lumA","lumB","alpha","private_safeAlpha","darken","coefficient","private_safeDarken","lighten","private_safeLighten","emphasize","private_safeEmphasize","_excluded2","_excluded3","shouldForwardProp","prop","systemDefaultTheme","createTheme","lowercaseFirstLetter","string","toLowerCase","resolveTheme","_ref2","obj","defaultTheme","Object","keys","processStyleArg","callableStyle","ownerState","resolvedStylesArg","Array","isArray","flatMap","resolvedStyle","variants","_resolvedStylesArg$va","forEach","variant","isMatch","key","style","createStyled","input","_input$defaultTheme","_input$rootShouldForw","rootShouldForwardProp","_input$slotShouldForw","slotShouldForwardProp","systemSx","styleFunctionSx","__mui_systemSx","tag","inputOptions","processStyles","styles","filter","slot","componentName","name","componentSlot","inputSkipVariantsResolver","skipVariantsResolver","inputSkipSx","skipSx","_inputOptions$overrid","overridesResolver","options","shouldForwardPropOption","charCodeAt","isStringTag","defaultStyledResolver","styledEngineStyled","label","transformStyleArg","stylesArg","__emotion_real","isPlainObject","muiStyledResolver","styleArg","transformedStyleArg","_len","expressions","_key","expressionsWithDefaultTheme","components","styleOverrides","resolvedStyleOverrides","entries","_ref3","_ref4","_slicedToArray","slotKey","slotStyle","_theme$components","numOfCustomFnsApplied","placeholders","fill","_toConsumableArray","raw","Component","apply","muiName","withConfig","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","DEFAULT_ATTRIBUTE","getSystemMode","mode","window","matchMedia","matches","processState","state","callback","systemMode","initializeValue","defaultValue","localStorage","getItem","setItem","e","useCurrentColorScheme","_options$defaultMode","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","_options$supportedCol","supportedColorSchemes","_options$modeStorageK","modeStorageKey","_options$colorSchemeS","colorSchemeStorageKey","_options$storageWindo","storageWindow","joinedColorSchemes","_React$useState","initialMode","lightColorScheme","darkColorScheme","_React$useState2","setState","colorScheme","getColorScheme","setMode","currentState","newMode","setColorScheme","includes","console","newState","newLightColorScheme","light","newDarkColorScheme","dark","handleMediaQuery","event","mediaListener","current","handler","media","addListener","removeListener","handleStorage","newValue","startsWith","endsWith","addEventListener","removeEventListener","DISABLE_CSS_TRANSITION","createCssVarsProvider","_options$theme","_options$attribute","attribute","defaultAttribute","defaultModeStorageKey","defaultColorSchemeStorageKey","designSystemMode","designSystemColorScheme","defaultColorScheme","_options$disableTrans","disableTransitionOnChange","designSystemTransitionOnChange","excludeVariablesFromRoot","colorSchemes","ColorSchemeContext","CssVarsProvider","_props$theme","themeProp","_props$modeStorageKey","_props$colorSchemeSto","_props$attribute","_props$defaultMode","_props$defaultColorSc","_props$disableTransit","_props$storageWindow","_props$documentNode","documentNode","document","_props$colorSchemeNod","colorSchemeNode","documentElement","_props$colorSchemeSel","colorSchemeSelector","_props$disableNestedC","disableNestedContext","_props$disableStyleSh","disableStyleSheetGeneration","hasMounted","muiUseTheme","ctx","scopedTheme","_ref$colorSchemes","_ref$components","_ref$generateCssVars","generateCssVars","vars","css","cssVarPrefix","restThemeProp","allColorSchemes","_useCurrentColorSchem","stateMode","stateColorScheme","calculatedColorScheme","_generateCssVars","rootCss","rootVars","getColorSchemeSelector","targetColorScheme","defaultColorSchemeStyleSheet","otherColorSchemesStyleSheet","scheme","_generateCssVars2","deepmerge","schemeKey","palette","excludedVariables","cssVar","setAttribute","timer","createElement","appendChild","createTextNode","head","getComputedStyle","body","setTimeout","removeChild","clearTimeout","contextValue","shouldGenerateStyleSheet","element","_jsxs","GlobalStyles","ThemeProvider","useColorScheme","getInitColorSchemeScript","params","_ref$defaultMode","_ref$defaultLightColo","_ref$defaultDarkColor","_ref$modeStorageKey","_ref$colorSchemeStora","_ref$attribute","_ref$colorSchemeNode","dangerouslySetInnerHTML","__html","systemGetInitColorSchemeScript","createGetCssVar","prefix","appendVar","field","_len2","fallbacks","_key2","assignNestedKeys","arrayKeys","temp","walkObjectDeep","shouldSkipPaths","recurse","object","parentKeys","getCssValue","some","cssVarsParser","shouldSkipGeneratingVar","varsWithDefaults","assign","parserConfig","_theme$colorSchemes","_theme$defaultColorSc","_cssVarsParser","themeVars","colorSchemesMap","otherColorSchemes","_toPropertyKey","_cssVarsParser2","_cssVarsParser3","_parserConfig$getSele2","_parserConfig$getSele","selector","getSelector","call"],"sourceRoot":""}