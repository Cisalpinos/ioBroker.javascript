{"version":3,"file":"static/js/src_bootstrap_jsx-node_modules_leaflet_dist_leaflet_css-src_index_css.0aaf3102.chunk.js","mappings":"2qBAYA,MAAMA,EAASC,IAAU,CACrB,IAAK,CACD,gBAAiBA,EAAM,QAAQ,WAAW,QAC1C,MAAOA,EAAM,QAAQ,KAAK,QAC1B,OAAQ,MACZ,EACA,KAAM,CACF,QAAS,GACT,MAAO,GACX,CACJ,GAEA,MAAMC,UAAY,GAAW,CACzB,YAAYC,EAAO,CACf,MAAMC,EAAgB,KAAKD,CAAK,EAChC,MAAMA,EAAOC,CAAa,EAE1B,KAAK,MAAQ,CACT,KAAM,CAEF,SAAU,SACV,UAAW,YAEX,aAAc,WACd,cAAe,EACf,kBAAmB,OACnB,gBAAiB,OAEjB,YAAa,aACb,aAAc,EACd,iBAAkB,QAClB,eAAgB,OACpB,EACA,MAAO,KAAK,YAAY,CAC5B,EACA,MAAMC,EAAe,CACjB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,QAAS,EAAQ,KAAc,CACnC,EAEA,OAAK,gBAAgBA,CAAY,EACjC,OAAK,aAAa,UAAU,UAAY,UAAU,cAAgB,MAAM,UAAU,EAAG,CAAC,EAAE,YAAY,CAAC,CACzG,CAEA,QAAS,CACL,OAAK,KAAK,MAAM,OAQT,kBAACC,EAAA,EAAoB,CAAC,YAAW,IACpC,kBAACC,EAAA,EAAa,CAAC,MAAO,KAAK,MAAM,OAC7B,kBAAC,OAAI,MAAO,CAAE,MAAO,OAAQ,gBAAiB,OAAQ,MAAO,MAAO,GAChE,kBAAC,OAAI,MAAO,CAAE,MAAO,MAAO,GACxB,kBAACC,EAAA,GACG,MAAK,GACL,OAAQ,KAAK,OACb,MAAO,KAAK,MAAM,MAClB,UAAW,KAAK,MAAM,UACtB,UAAW,KAAK,MAAM,UACtB,KAAK,oBACL,aAAc,CAAE,WAAY,aAAc,UAAW,GAAI,SAAU,EAAG,EACtE,KAAM,KAAK,MAAM,KACjB,QAAS,IAAM,CAAC,EAChB,SAAU,EACV,OAAQ,CACJ,KAAM,6CACN,KAAM,QACV,EACA,SAAUC,GAAQ,CACd,KAAK,SAAS,CAAE,KAAAA,CAAK,CAAC,CAC1B,EACA,YAAY,aACZ,OAAQ,KAAK,OACjB,CACJ,CACJ,CACJ,CACJ,EAnCW,kBAACH,EAAA,EAAoB,CAAC,YAAW,IACpC,kBAACC,EAAA,EAAa,CAAC,MAAO,KAAK,MAAM,OAC7B,kBAAC,SAAM,CAAC,MAAO,KAAK,MAAM,UAAW,CACzC,CACJ,CAgCR,CACJ,CAEA,WAAeG,EAAA,GAAWV,CAAM,EAAEE,CAAG,E,wVCvGrC,QAAeS,GAAQ,CACnB,MAAMC,EAAS,UACTC,EAAU,UACVZ,EAAQ,QAAKa,EAAA,SAAMH,CAAI,CAAC,EAC9B,OAAKV,IAGLA,EAAM,QAAQ,KAAK,OAAS,CACxB,MAAOW,CACX,EACAX,EAAM,QAAQ,KAAK,QAAU,CACzB,MAAOY,CACX,EAEOZ,EACX,ECRA,OAAO,YAAc,6BACrB,IAAIc,EAAY,iBAAmB,EAEnC,SAASC,GAAQ,CACb,MAAMC,EAAY,SAAS,eAAe,MAAM,EAEhD,SADa,KAAWA,CAAS,EACrB,OAAO,kBAAC,oBAChB,kBAACX,EAAA,EAAoB,CAAC,YAAW,IAC7B,kBAACC,EAAA,EAAa,CAAC,MAAON,EAAMc,CAAS,GACjC,kBAAC,GACG,OAAQ,CAAC,KAAM,IAAI,EACnB,cAAgBG,GAAW,CACvBH,EAAYG,EACZF,EAAM,CACV,EACA,YAAY,WAChB,CACJ,CACJ,CACJ,CAAmB,CACvB,CAEAA,EAAM,C","sources":["App.jsx","theme.js","bootstrap.jsx"],"sourcesContent":["// this file used only for simulation and not used in end build\r\n\r\nimport React from 'react';\r\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nimport GenericApp from '@iobroker/adapter-react-v5/GenericApp';\r\nimport { I18n, Loader } from '@iobroker/adapter-react-v5';\r\n\r\nimport Astro from './Astro';\r\n\r\nconst styles = theme => ({\r\n    app: {\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary,\r\n        height: '100%',\r\n    },\r\n    item: {\r\n        padding: 50,\r\n        width: 400,\r\n    },\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = { ...props };\r\n        super(props, extendedProps);\r\n\r\n        this.state = {\r\n            data: {\r\n                // useSystemGPS: true,\r\n                latitude: 3.16211200,\r\n                longitude: 101.69876480,\r\n\r\n                sunriseEvent: 'nightEnd',\r\n                sunriseOffset: 0,\r\n                sunriseLimitStart: '6:00',\r\n                sunriseLimitEnd: '9:00',\r\n\r\n                sunsetEvent: 'goldenHour',\r\n                sunsetOffset: 0,\r\n                sunsetLimitStart: '18:00',\r\n                sunsetLimitEnd: '23:00',\r\n            },\r\n            theme: this.createTheme(),\r\n        };\r\n        const translations = {\r\n            en: require('./i18n/en'),\r\n            de: require('./i18n/de'),\r\n            ru: require('./i18n/ru'),\r\n            pt: require('./i18n/pt'),\r\n            nl: require('./i18n/nl'),\r\n            fr: require('./i18n/fr'),\r\n            it: require('./i18n/it'),\r\n            es: require('./i18n/es'),\r\n            pl: require('./i18n/pl'),\r\n            uk: require('./i18n/uk'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        I18n.setTranslations(translations);\r\n        I18n.setLanguage((navigator.language || navigator.userLanguage || 'en').substring(0, 2).toLowerCase());\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <StyledEngineProvider injectFirst>\r\n                <ThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType} />\r\n                </ThemeProvider>\r\n            </StyledEngineProvider>;\r\n        }\r\n\r\n        return <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={this.state.theme}>\r\n                <div style={{ width: '100%', backgroundColor: '#000', color: '#FFF' }}>\r\n                    <div style={{ width: '100%' }}>\r\n                        <Astro\r\n                            alive\r\n                            socket={this.socket}\r\n                            theme={this.state.theme}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            attr=\"myCustomAttribute\"\r\n                            systemConfig={{ dateFormat: 'DD/MM/YYYY', longitude: 10, latitude: 20 }}\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomJavascriptSet/Components/Astro',\r\n                                type: 'custom',\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                            adapterName=\"javascript\"\r\n                            common={this.common}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// this file used only for simulation and not used in end build\r\nimport Theme from '@iobroker/adapter-react-v5/Theme';\r\n\r\nexport default type => {\r\n    const danger = '#dd5325';\r\n    const success = '#73b6a8';\r\n    const theme = { ...Theme(type) };\r\n    if (!theme) {\r\n        return theme;\r\n    }\r\n    theme.palette.text.danger = {\r\n        color: danger,\r\n    };\r\n    theme.palette.text.success = {\r\n        color: success,\r\n    };\r\n\r\n    return theme;\r\n};\r\n","// this file used only for simulation and not used in end build\r\n\r\n/* eslint-disable */\r\nimport React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\r\nimport Utils from '@iobroker/adapter-react-v5/Components/Utils';\r\nimport App from './App';\r\nimport theme from './theme';\r\n\r\nwindow.adapterName = 'adapter-component-template';\r\nlet themeName = Utils.getThemeName();\r\n\r\nfunction build() {\r\n    const container = document.getElementById('root');\r\n    const root = createRoot(container);\r\n    return root.render(<React.StrictMode>\r\n        <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={theme(themeName)}>\r\n                <App\r\n                    socket={{port: 8081}}\r\n                    onThemeChange={(_theme) => {\r\n                        themeName = _theme;\r\n                        build();\r\n                    }}\r\n                    adapterName=\"backitup\"\r\n                />\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>\r\n    </React.StrictMode>);\r\n}\r\n\r\nbuild();"],"names":["styles","theme","App","props","extendedProps","translations","StyledEngineProvider","ThemeProvider","Astro","data","withStyles","type","danger","success","Theme","themeName","build","container","_theme"],"sourceRoot":""}